* Program csv-to-ov2
#+BEGIN_SRC perl :tangle bin/csv-to-ov2.pl :shebang #!/usr/bin/env perl :noweb yes
<<configuration-chunk>>
use warnings;
use strict;
use Text::CSV;

my $infile = $ARGV[0];

# Given an input file, which I assume to be somename.csv,
# create an output file _somename.ov2

$infile =~ m/csv\/(.*?)\.csv/;
my $basename = $1;
my $outfile  = "_" . $basename . ".ov2";

open my $fh, $infile or die "$infile: $!";
open( my $out, ">", $outfile ) or die "$outfile: $!";

my $csv = Text::CSV->new( { binary => 1 } )    # should set binary attribute.
  or die "Cannot use CSV: " . Text::CSV->error_diag();

my @rows;
while ( my $row = $csv->getline($fh) ) {

    #    $row->[2] =~ m/pattern/ or next; # 3rd field should match
    my $latitude  = $row->[0] * 100000;
    my $longitude = $row->[1] * 100000;
    my $name      = $row->[2];
    my $length    = length($name) + 13 + 1;
    push @rows, $row;

    my $packed =
      pack( "c V V V A* c", 2, $length, $longitude, $latitude, $name, 0 );
    print $out $packed;
}
$csv->eof or $csv->error_diag();
close $fh;

close $out;

#+end_src
* An example csv file
#+begin_example :tangle riverside.csv
33.94639,-117.38657,"LA Fitness Riverside"
#+end_example

#+END_SRC
  
** Your program configuration
*** AppConfig
#+NAME: configuration-chunk
#+BEGIN_SRC perl
use AppConfig;

# create a new AppConfig object
my $config = AppConfig->new;

# define a new variable
# $config->define('LOCAL_DATABASE=s');
$config->define("VAR1=s");

# read configuration file
$config->file('../conf.conf');

my $VAR1 = $config->get("VAR1");

print "VAR1 = $VAR1\n";
#+END_SRC
*** Configuration file
#+BEGIN_SRC conf :tangle conf.conf
VAR1=3.14
#+END_SRC    
*** [[http://search.cpan.org/~abw/AppConfig/][AppConfig]] by [[http://search.cpan.org/~abw/][Andy Wardley]]
*** [[http://search.cpan.org/~adamk/Config-Tiny/][Config::Tiny]] by [[http://search.cpan.org/~adamk/][Adam Kennedy]]
    - used in Perlcritic in Critic/UserProfile.pm
    
